db.UserVerification.insertMany([
  {
    userId: "user_id_1",
    uniqueString: "unique_string_1",
    expiresAt: ISODate("2024-02-24T00:00:00Z")
  },
  {
    userId: "user_id_2",
    uniqueString: "unique_string_2",
    expiresAt: ISODate("2024-02-25T00:00:00Z")
  },
  // Add more dummy data as needed
]);


db.ForgotPassword.insertMany([
  {
    userId: "user_id_1",
    uniqueString: "unique_string_3",
    expiresAt: ISODate("2024-02-26T00:00:00Z")
  },
  // Add more dummy data as needed
]);


db.Patient.insertMany([
  {
    firstName: "John",
    lastName: "Doe",
    dateOfBirth: ISODate("1990-01-01"),
    bloodGroup: "A+",
    mobile: "1234567890",
    email: "john.doe@example.com",
    // Add more fields and dummy data as needed
  },
  // Add more dummy data as needed
]);

db.Doctor.insertMany([
  {
    firstName: "Jane",
    lastName: "Smith",
    email: "jane.smith@example.com",
    // Add more fields and dummy data as needed
  },
  // Add more dummy data as needed
]);


db.Appointments.insertMany([
  {
    patientId: "patient_id_1",
    doctorId: "doctor_id_1",
    trackingId: "tracking_id_1",
    firstName: "John",
    lastName: "Doe",
    email: "john.doe@example.com",
    phone: "1234567890",
    // Add more fields and dummy data as needed
  },
  // Add more dummy data as needed
]);


db.Payment.insertMany([
  {
    appointmentId: "appointment_id_1",
    paymentMethod: "credit_card",
    paymentType: "online",
    DoctorFee: 100,
    bookingFee: 10,
    vat: 5,
    totalAmount: 115
  },
  // Add more dummy data as needed
]);

db.Reviews.insertMany([
  {
    doctorId: "doctor_id_1",
    patientId: "patient_id_1",
    description: "Great experience!",
    star: "5",
    isRecommended: true,
    response: "Thank you for your feedback."
  },
  // Add more dummy data as needed
]);

db.Prescription.insertMany([
  {
    doctorId: "doctor_id_1",
    patientId: "patient_id_1",
    appointmentId: "appointment_id_1",
    followUpdate: "2024-03-01",
    instruction: "Take medication as prescribed.",
    isFullfilled: false,
    isArchived: false,
    disease: "Fever",
    // Add more fields and dummy data as needed
  },
  // Add more dummy data as needed
]);

db.Medicine.insertMany([
  {
    prescriptionId: "prescription_id_1",
    medicine: "Paracetamol",
    dosage: "500mg",
    frequency: "Every 6 hours",
    duration: "5 days"
  },
  // Add more dummy data as needed
]);

db.Favourites.insertMany([
  {
    doctorId: "doctor_id_1",
    patientId: "patient_id_1"
  },
  // Add more dummy data as needed
]);

db.DoctorTimeSlot.insertMany([
  {
    doctorId: "doctor_id_1",
    day: "Monday",
    weekDay: "1",
    maximumPatient: 10
  },
  // Add more dummy data as needed
]);

db.ScheduleDay.insertMany([
  {
    startTime: "08:00",
    endTime: "12:00",
    doctorTimeSlotId: "doctor_timeslot_id_1"
  },
  // Add more dummy data as needed
]);

db.Blogs.insertMany([
  {
    title: "Introduction to MongoDB",
    description: "Learn about MongoDB basics.",
    img: "mongodb_image_url",
    userId: "doctor_id_1"
  },
  // Add more dummy data as needed
]);


select * from Doctor;




-- CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

CREATE TABLE "Auth" (
  "id" VARCHAR(191) NOT NULL DEFAULT uuid_generate_v4(),
  "email" VARCHAR(191) NOT NULL,
  "password" VARCHAR(191) NOT NULL,
  "userId" VARCHAR(191),
  "role" VARCHAR(191) NOT NULL,
  PRIMARY KEY ("id"),
  UNIQUE ("email")
);

CREATE TABLE "UserVerfication" (
  "id" VARCHAR(191) NOT NULL DEFAULT uuid_generate_v4(),
  "userId" VARCHAR(191) NOT NULL,
  "uniqueString" VARCHAR(191),
  "expiresAt" TIMESTAMP,
  "createdAt" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY ("id")
);

CREATE TABLE "ForgotPassword" (
  "id" VARCHAR(191) NOT NULL DEFAULT uuid_generate_v4(),
  "userId" VARCHAR(191) NOT NULL,
  "uniqueString" VARCHAR(191),
  "expiresAt" TIMESTAMP,
  "createdAt" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY ("id")
);

CREATE TABLE "Patient" (
  "id" VARCHAR(191) NOT NULL DEFAULT uuid_generate_v4(),
  "firstName" VARCHAR(191) NOT NULL,
  "lastName" VARCHAR(191) NOT NULL,
  "dateOfBirth" TIMESTAMP,
  "bloodGroup" VARCHAR(191),
  "mobile" VARCHAR(191),
  "city" VARCHAR(191),
  "state" VARCHAR(191),
  "zipCode" VARCHAR(191),
  "gender" VARCHAR(191),
  "country" VARCHAR(191),
  "email" VARCHAR(191) NOT NULL,
  "address" VARCHAR(191),
  "img" VARCHAR(191),
  "createdAt" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY ("id"),
  UNIQUE ("email")
);

CREATE TABLE "Doctor" (
  "id" VARCHAR(191) NOT NULL DEFAULT uuid_generate_v4(),
  "firstName" VARCHAR(191) NOT NULL,
  "lastName" VARCHAR(191) NOT NULL,
  "email" VARCHAR(191) NOT NULL,
  "address" VARCHAR(191),
  "img" VARCHAR(191),
  "phone" VARCHAR(191),
  "gender" VARCHAR(191),
  "dob" VARCHAR(191),
  "biography" VARCHAR(191),
  "clinicName" VARCHAR(191),
  "clinicAddress" VARCHAR(191),
  "clinicImages" VARCHAR(191),
  "city" VARCHAR(191),
  "state" VARCHAR(191),
  "country" VARCHAR(191),
  "postalCode" VARCHAR(191),
  "price" VARCHAR(191),
  "services" VARCHAR(191),
  "specialization" VARCHAR(191),
  "degree" VARCHAR(191),
  "college" VARCHAR(191),
  "completionYear" VARCHAR(191),
  "experience" VARCHAR(191),
  "designation" VARCHAR(191),
  "award" VARCHAR(191),
  "awardYear" VARCHAR(191),
  "registration" VARCHAR(191),
  "year" VARCHAR(191),
  "experienceHospitalName" VARCHAR(191),
  "expericenceStart" VARCHAR(191),
  "expericenceEnd" VARCHAR(191),
  "verified" BOOLEAN,
  "createdAt" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY ("id"),
  UNIQUE ("email")
);

CREATE TABLE "Appointments" (
  "id" VARCHAR(191) NOT NULL DEFAULT uuid_generate_v4(),
  "patientId" VARCHAR(191),
  "doctorId" VARCHAR(191),
  "trackingId" VARCHAR(191),
  "firstName" VARCHAR(191),
  "lastName" VARCHAR(191),
  "email" VARCHAR(191),
  "phone" VARCHAR(191),
  "address" VARCHAR(191),
  "description" VARCHAR(191),
  "scheduleDate" VARCHAR(191),
  "scheduleTime" VARCHAR(191),
  "reasonForVisit" VARCHAR(191),
  "status" VARCHAR(191),
  "paymentStatus" VARCHAR(191),
  "prescriptionStatus" VARCHAR(191),
  "isFollowUp" BOOLEAN,
  "patientType" VARCHAR(191),
  "createdAt" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY ("id"),
  UNIQUE ("trackingId")
);

CREATE TABLE "Payment" (
  "id" VARCHAR(191) NOT NULL DEFAULT uuid_generate_v4(),
  "appointmentId" VARCHAR(191) NOT NULL,
  "paymentMethod" VARCHAR(191) NOT NULL,
  "paymentType" VARCHAR(191) NOT NULL,
  "DoctorFee" INT NOT NULL,
  "bookingFee" INT NOT NULL,
  "vat" INT,
  "totalAmount" INT NOT NULL,
  PRIMARY KEY ("id"),
  FOREIGN KEY ("appointmentId") REFERENCES "Appointments"("id") ON DELETE CASCADE
);

CREATE TABLE "Reviews" (
  "id" VARCHAR(191) NOT NULL DEFAULT uuid_generate_v4(),
  "doctorId" VARCHAR(191) NOT NULL,
  "patientId" VARCHAR(191) NOT NULL,
  "description" VARCHAR(191),
  "star" VARCHAR(191),
  "isRecommended" BOOLEAN,
  "response" VARCHAR(191),
  "createdAt" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY ("id"),
  FOREIGN KEY ("doctorId") REFERENCES "Doctor"("id") ON DELETE CASCADE,
  FOREIGN KEY ("patientId") REFERENCES "Patient"("id") ON DELETE CASCADE
);

CREATE TABLE "Prescription" (
  "id" VARCHAR(191) NOT NULL DEFAULT uuid_generate_v4(),
  "doctorId" VARCHAR(191) NOT NULL,
  "patientId" VARCHAR(191) NOT NULL,
  "appointmentId" VARCHAR(191) NOT NULL,
  "followUpdate" VARCHAR(191),
  "instruction" VARCHAR(191),
  "isFullfilled" BOOLEAN NOT NULL,
  "isArchived" BOOLEAN NOT NULL,
  "daignosis" VARCHAR(191),
  "disease" VARCHAR(191) NOT NULL,
  "test" VARCHAR(191),
  "createdAt" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY ("id"),
  FOREIGN KEY ("doctorId") REFERENCES "Doctor"("id") ON DELETE CASCADE,
  FOREIGN KEY ("patientId") REFERENCES "Patient"("id") ON DELETE CASCADE,
  FOREIGN KEY ("appointmentId") REFERENCES "Appointments"("id") ON DELETE CASCADE
);

CREATE TABLE "Medicine" (
  "id" VARCHAR(191) NOT NULL DEFAULT uuid_generate_v4(),
  "prescriptionId" VARCHAR(191) NOT NULL DEFAULT uuid_generate_v4(),
  "medicine" VARCHAR(255),
  "dosage" VARCHAR(255),
  "frequency" VARCHAR(255),
  "duration" VARCHAR(255),
  "createdAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("id"),
  FOREIGN KEY ("prescriptionId") REFERENCES "Prescription"("id") ON DELETE CASCADE
);

CREATE TABLE "Favourites" (
  "id" VARCHAR(191) NOT NULL DEFAULT uuid_generate_v4(),
  "doctorId" VARCHAR(191) NOT NULL DEFAULT uuid_generate_v4(),
  "patientId" VARCHAR(191) NOT NULL DEFAULT uuid_generate_v4(),
  FOREIGN KEY ("doctorId") REFERENCES "Doctor"("id") ON DELETE CASCADE,
  FOREIGN KEY ("patientId") REFERENCES "Patient"("id") ON DELETE SET NULL
);

CREATE TABLE "DoctorTimeSlot" (
  "id" VARCHAR(191) NOT NULL DEFAULT uuid_generate_v4(),
  "doctorId" VARCHAR(191) NOT NULL,
  "day" VARCHAR(255),
  "weekDay" VARCHAR(255),
  "maximumPatient" INT,
  "createdAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY ("doctorId") REFERENCES "Doctor"("id") ON DELETE CASCADE
);

CREATE TABLE "ScheduleDay" (
  "id" SERIAL PRIMARY KEY,
  "startTime" TIME,
  "endTime" TIME,
  "doctorTimeSlotId" VARCHAR(191) NOT NULL
);

CREATE TABLE "Blogs" (
  "id" VARCHAR(191) NOT NULL DEFAULT uuid_generate_v4(),
  "title" VARCHAR(255),
  "description" TEXT,
  "img" VARCHAR(255),
  "userId" VARCHAR(191) NOT NULL,
  "createdAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY ("userId") REFERENCES "Doctor"("id") ON DELETE CASCADE
);



